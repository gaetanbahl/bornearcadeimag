--- a/drivers/gpu/drm/drm_crtc_helper.c
+++ b/drivers/gpu/drm/drm_crtc_helper.c
@@ -119,6 +119,9 @@ int drm_helper_probe_single_connector_modes(struct drm_connector *connector,
 		goto prune;
 	}
 
+	if (connector->c15khz)
+		goto prune;
+
 #ifdef CONFIG_DRM_LOAD_EDID_FIRMWARE
 	count = drm_load_edid_firmware(connector);
 	if (count == 0)
--- a/drivers/gpu/drm/drm_edid.c
+++ b/drivers/gpu/drm/drm_edid.c
@@ -527,6 +527,26 @@
 	       (mode->vsync_start - mode->vdisplay == 3);
 }
 
+struct drm_display_mode *drm_mode_find_c15khz(struct drm_device *dev,
+                                          int hsize, int vsize, int fresh)
+{
+       int i;
+
+       for (i = 0; i < drm_num_c15khz_modes; i++) {
+               const struct drm_display_mode *ptr = &drm_c15khz_modes[i];
+               if (hsize != ptr->hdisplay)
+                       continue;
+               if (vsize != ptr->vdisplay)
+                       continue;
+               if ((fresh != 0) && (fresh != drm_mode_vrefresh(ptr)))
+                       continue;
+
+               return drm_mode_duplicate(dev, ptr);
+       }
+       return NULL;
+}
+EXPORT_SYMBOL(drm_mode_find_c15khz);
+
 /*
  * drm_mode_find_dmt - Create a copy of a mode if present in DMT
  * @dev: Device to duplicate against
--- a/drivers/gpu/drm/drm_edid_modes.h
+++ b/drivers/gpu/drm/drm_edid_modes.h
@@ -27,6 +27,44 @@
 #include <drm/drmP.h>
 #include <drm/drm_edid.h>
 
+ /*
+ * Arcade modelines
+ *
+ */
+static struct drm_display_mode drm_c15khz_modes[] = {
+       /* 320x240@60.00 15.660 Khz */
+       { DRM_MODE("320x240", DRM_MODE_TYPE_DRIVER, 6640, 320, 336,
+                  368, 424, 0, 240, 242, 245, 261, 0,
+                  DRM_MODE_FLAG_NHSYNC | DRM_MODE_FLAG_NVSYNC) },
+       /* 640x480@60.00 15.750 Khz */
+       { DRM_MODE("640x480", DRM_MODE_TYPE_DRIVER, 13104, 640, 664,
+                  728, 832, 0, 480, 484, 490, 525, 0,
+                  DRM_MODE_FLAG_NHSYNC | DRM_MODE_FLAG_NVSYNC | 
+                       DRM_MODE_FLAG_INTERLACE) },
+       /* 720x480@59.95 15.7369 Khz */
+       { DRM_MODE("720x480", DRM_MODE_TYPE_DRIVER, 14856, 720, 752,
+                  824, 944, 0, 480, 484, 490, 525, 0,
+                  DRM_MODE_FLAG_NHSYNC | DRM_MODE_FLAG_NVSYNC | 
+                       DRM_MODE_FLAG_INTERLACE) },
+       /* 768x576 15.6250 Khz */
+       { DRM_MODE("768x576", DRM_MODE_TYPE_DRIVER, 15625, 768, 800,
+                  872, 1000, 0, 576, 582, 588, 625, 0,
+                  DRM_MODE_FLAG_NHSYNC | DRM_MODE_FLAG_NVSYNC | 
+                       DRM_MODE_FLAG_INTERLACE) },
+       /* 800x600@50.00 15.725 Khz */
+       { DRM_MODE("800x576", DRM_MODE_TYPE_DRIVER, 16354, 800, 832,
+                  912, 1040, 0, 576, 584, 590, 629, 0,
+                  DRM_MODE_FLAG_NHSYNC | DRM_MODE_FLAG_NVSYNC | 
+                       DRM_MODE_FLAG_INTERLACE) },
+       /* 1024@768@40.00 16.300 Khz */
+       { DRM_MODE("1024x768", DRM_MODE_TYPE_DRIVER, 21386, 1024, 1072,
+                  1168, 1312, 0, 768, 774, 780, 815, 0,
+                  DRM_MODE_FLAG_NHSYNC | DRM_MODE_FLAG_NVSYNC | 
+                       DRM_MODE_FLAG_INTERLACE) },
+};
+static const int drm_num_c15khz_modes =
+       sizeof(drm_c15khz_modes) / sizeof(struct drm_display_mode);
+
 /*
  * Autogenerated from the DMT spec.
  * This table is copied from xfree86/modes/xf86EdidModes.c.
--- a/drivers/gpu/drm/drm_modes.c
+++ b/drivers/gpu/drm/drm_modes.c
@@ -1013,6 +1013,7 @@ bool drm_mode_parse_command_line_for_connector(const char *mode_option,
 	bool interlace = false, margins = false, was_digit = false;
 	int i;
 	enum drm_connector_force force = DRM_FORCE_UNSPECIFIED;
+	int c15khz;
 
 #ifdef CONFIG_FB
 	if (!mode_option)
@@ -1101,6 +1102,9 @@ bool drm_mode_parse_command_line_for_connector(const char *mode_option,
 
 			force = DRM_FORCE_OFF;
 			break;
+		case 'c':
+			c15khz = 1;
+			break;
 		default:
 			goto done;
 		}
@@ -1146,6 +1150,8 @@ done:
 	mode->interlace = interlace;
 	mode->margins = margins;
 	mode->force = force;
+	mode->c15khz = c15khz ? true : false;
+	connector->c15khz = mode->c15khz;
 
 	return true;
 }
--- a/drivers/gpu/drm/drm_fb_helper.c
+++ b/drivers/gpu/drm/drm_fb_helper.c
@@ -973,6 +973,20 @@ static struct drm_display_mode *drm_pick_cmdline_mode(struct drm_fb_helper_conne
 	if (cmdline_mode->rb || cmdline_mode->margins)
 		goto create_mode;
 
+	if (cmdline_mode->c15khz) {
+		mode = drm_mode_find_c15khz(fb_helper_conn->connector->dev,
+			cmdline_mode->xres,
+			cmdline_mode->yres,
+			(cmdline_mode->refresh_specified) ?
+				cmdline_mode->refresh : 0);
+
+		if (mode) {
+			drm_mode_set_crtcinfo(mode, CRTC_INTERLACE_HALVE_V);
+			list_add(&mode->head, &fb_helper_conn->connector->modes);
+			return mode;
+		}
+	}
+
 	list_for_each_entry(mode, &fb_helper_conn->connector->modes, head) {
 		/* check width/height */
 		if (mode->hdisplay != cmdline_mode->xres ||
--- a/include/drm/drm_crtc.h
+++ b/include/drm/drm_crtc.h
@@ -609,6 +609,9 @@ struct drm_connector {
 	int audio_latency[2];
 	int null_edid_counter; /* needed to workaround some HW bugs where we get all 0s */
 	unsigned bad_edid_counter;
+
+	/* 15KHz output */
+	bool c15khz;
 };
 
 /**
@@ -1057,6 +1060,8 @@ int hdisplay, int vdisplay);
 extern int drm_edid_header_is_valid(const u8 *raw_edid);
 extern bool drm_edid_block_valid(u8 *raw_edid, int block, bool print_bad_edid);
 extern bool drm_edid_is_valid(struct edid *edid);
+struct drm_display_mode *drm_mode_find_c15khz(struct drm_device *dev,
+					      int hsize, int vsize, int fresh);
 struct drm_display_mode *drm_mode_find_dmt(struct drm_device *dev,
 					   int hsize, int vsize, int fresh,
 					   bool rb);
--- a/include/drm/drmP.h
+++ b/include/drm/drmP.h
@@ -1042,6 +1042,7 @@ struct drm_fb_helper_cmdline_mode {
 	bool cvt;
 	bool margins;
 	enum drm_connector_force force;
+	bool c15khz;
 };
 
 
